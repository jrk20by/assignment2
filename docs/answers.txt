# Git Lab tutorials completed 10/24/2024

# GitHub account https://github.com/jrk20by created 10/23/2024

1. $ git push origin master
info: please complete authentication in your browser...
Enumerating objects: 9, done.
Counting objects: 100% (9/9), done.
Delta compression using up to 12 threads
Compressing objects: 100% (5/5), done.
Writing objects: 100% (7/7), 711 bytes | 711.00 KiB/s, done.
Total 7 (delta 2), reused 0 (delta 0), pack-reused 0 (from 0)
remote: Resolving deltas: 100% (2/2), completed with 1 local object.
To https://github.com/jrk20by/assignment2.git
   f4975e5..9daca92  master -> master


2. 9, git rev-list --count HEAD

3. Date:   Thu Oct 24 21:54:25 2024 -0400, git log -- README.md

4. Branches are used in a repository so that multiple users can work on the different parts of the same code concurrently without interfering with each other, and to implement version control - that is, to implement and test different features separately

5. get log gets info about last commits, get status shows the working tree status

6. git log --follow Vehicle.h

7. git log --grep="file"

8. I) Inheritance is a concept in OOP which allows for classes or objects derived from other objects to share or "inherit" some of the properties or behaviors of their parent objects. II) Polymorphism is the concept that one class can derive multiple objects with different properties (dynamic runtime behavior), e.g. a class shape can be derived to make a circle object, a square object, etc. III) Encapsulation is the idea of taking a concept and combining all the data, variables, and functions of that concept into a single object or class, in which the object protects it's own state data by use of privatizing certain variables and controlling access via member functions.

9. In the integration manager workflow, one integration manager oversees the merge requests of all developers to master. In the dictator and lieutenant workflow, the dictator (integration manager) has a layer of lieutenants between themselves and the developers. Each lieutenant is responsible for managing the merging of a sub-set of the developers, and the dictator manages the merge requests of the lieutenants to master

10. In the centralized workflow, there is no one individual assigned to ensure breaking changes do not occur. At the scale of 100 developers, the double-redundancy of having a subset of developer's changes validated by a lieutenant, and having the code validated again by the dictator can guard against this. Also the dictator-lieutenant workflow can allow for more granular distribution of the work, improving efficiency. 